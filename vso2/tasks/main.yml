---
- name: install pre-requisites
  pip:
    name:
      - openshift
      - pyyaml
      - kubernetes 

- name: Check if Helm repository already exists
  shell: helm repo list | grep -q "hashicorp"
  # ignore_errors: true
  register: __helm_repo_check

- name: Add Helm repository if it doesn't exist
  when: __helm_repo_check.rc != 0
  ansible.builtin.shell:
    cmd: helm repo add hashicorp https://helm.releases.hashicorp.com
  ignore_errors: true

- name: Check if Helm release already exists
  ansible.builtin.shell:
    cmd: helm list -n vault | grep -q "^vault\s"
  ignore_errors: true
  register: __helm_release_check

- name: Install Helm chart if release doesn't exist
  when: __helm_release_check.rc != 0
  ansible.builtin.shell:
    cmd: helm install vault hashicorp/vault --set="injector.enabled=true" --set=injector.externalVaultAddr={{ vso_vault_address }} --version 0.22.1 -n vault --create-namespace
  ignore_errors: true



- name: Check if secret already exists
  ansible.builtin.shell:
    cmd: kubectl get secret vault-token-g955r -n vault
  register: __secret_check
  ignore_errors: true

- name: Create Kubernetes Secret
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Secret
      metadata:
        name: vault-token-g955r
        annotations:
          kubernetes.io/service-account.name: vault
      type: kubernetes.io/service-account-token
    namespace: vault


- name: Create namespace
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ project }}-microservices"



- name: Create service account
  community.kubernetes.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: ServiceAccount
      metadata:
        name: vault-auth
        namespace: "{{ project }}-microservices"

- name: Enable and configure the auth method
  enable_vault_auth:
    vault_address: "{{ vso_vault_address }}"
    vault_token: "{{ vso_vault_token }}"
    k8s_auth_name: kubernetes-"{{ project }}"
    auth_method: "kubernetes"

# ! policy
- name: Write Vault policy
  write_vault_policy:
    project_name: "{{ project }}"
    vault_address: "{{ vso_vault_address }}"
    vault_token: "{{ vso_vault_token }}"


# ! ENVIRONMENT SET 
- name: Get token from Kubernetes secret
  ansible.builtin.shell:
    cmd: "kubectl get -n vault secret vault-token-g955r --output='go-template={{ '{{' }} .data.token {{ '}}' }}' | base64 --decode"
  register: __vso_token_output

- name: Get Kubernetes CA certificate
  ansible.builtin.shell:
    cmd: "kubectl config view --raw --minify --flatten --output='jsonpath={.clusters[].cluster.certificate-authority-data}' | base64 --decode"
  register: __vso_ca_cert_output

- name: Get Kubernetes host
  ansible.builtin.shell:
    cmd: "kubectl config view --raw --minify --flatten --output='jsonpath={.clusters[].cluster.server}'"
  register: __vso_kube_host_output

# !!! there is no check 
- name: Write Vault authentication configuration
  write_vault_auth_config:
    vault_address: "{{ vso_vault_address }}"
    vault_token: "{{ vso_vault_token }}"
    k8s_auth_name: kubernetes-"{{ project }}"
    token_reviewer_jwt: "{{ __vso_token_output.stdout }}"
    kubernetes_host: "{{ __vso_kube_host_output.stdout }}"
    kubernetes_ca_cert: "{{ __vso_ca_cert_output.stdout }}"
    issuer: "https://kubernetes.default.svc.cluster.local"

# !!! there is no check 
- name: Write Vault role configuration
  write_vault_auth_role:
    vault_address: "{{ vso_vault_address }}"
    vault_token: "{{ vso_vault_token }}"
    k8s_auth_name: kubernetes-"{{ project }}"
    role_name: "{{ project }}"
    service_account_names: "vault-auth"
    service_account_namespaces: "{{ project }}-microservices"
    policies: kubernetes-"{{ project }}"
    ttl: "24h"


- name: Put data to secret
  put_vault_secret:
    vault_address: "{{ vso_vault_address }}"
    vault_token: "{{ vso_vault_token }}"
    secret_path: "secret/k8s/{{ project }}/test-secret"
    data:
      - key: "name"
        value: "Rober"
      - key: "Age"
        value: "18"
      - key: "city"
        value: "Tashkent"
      - key: "interest"
        value: "engenering"
      - key: "about"
        value: "poxima"
# - name: Put data to secret
#   put_vault_secret:
#     vault_address: "{{ vso_vault_address }}"
#     vault_token: "{{ vso_vault_token }}"
#     secret_path: "kvv2/webapp"
#     data:
#       - key: "name"
#         value: "Bexruz"
#       - key: "Age"
#         value: "18"
#       - key: "city"
#         value: "Tashkent"
#       - key: "interest"
#         value: "engenering"
#       - key: "info"
#         value: "devops"